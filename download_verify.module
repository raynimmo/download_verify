<?php
/**
 * @file
 * creates a form for collecting user data before allowing a
 * file download to continue.
 */

/**
 * Implements hook_init().
 */
function download_verify_init() {
  // Since this file should only be loaded on the front page, it cannot be
  // declared in the info file.
  //if (drupal_is_front_page()) {
  //  drupal_add_css(drupal_get_path('module', 'foo') . '/foo.css');
  //}
  //get all the required variables.
  $download_verify_settings = array(
    'download_verify_email' => variable_get('download_verify_email'),
    'download_verify_css_target' => variable_get('download_verify_css_target'),
    'download_verify_intro_text' => variable_get('download_verify_intro_text'),
    'download_verify_footer_text' => variable_get('download_verify_footer_text'),
    );
    drupal_add_js(array('download_verify' => $download_verify_settings), 'setting');
}

/**
 * Implements hook_help().
 */
function download_verify_help($path, $arg) {
  if ($path == 'admin/help#download_verify') {
    return t('Refer to the modules README.txt for further information regarding the use of the Download Verify module.');
  }
}

/**
 * Implements hook_permission().
 */
function download_verify_permission() {
  return array(
    'administer download verify' => array(
      'title' => t('Administer Download Verify'),
      'description' => t('Allows a user to configure Download Verify'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function download_verify_menu() {
  $items['admin/config/download-verify'] = array(
    'title' => 'Download Verify',
    'description' => 'Configure module options',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('download_verify_configuration_form'),
    'access arguments' => array('administer download verify'),
    'file' => 'download_verify.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

define('DOWNLOAD_VERIFY_MAIL_TEXT',
  'This is an automated email from [site:name],

  Please add my name and email address to your site marketing list.
  Full Name: [user:firstname] [user:surname]
  Email: [user:email]
  ');

/**
 * Implements hook_mail().
 */
function download_verify_mail($key, &$message, $params) {

}

/**
 * Implements hook_form_alter().
 */
function download_verify_form_alter(&$form, &$form_state, $form_id) {
  //dsm($form_id);  // print form ID to messages
  //dsm($form);  // pretty print array using Krumo to messages
}
